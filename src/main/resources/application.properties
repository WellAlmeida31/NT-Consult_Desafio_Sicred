spring.application.name=assembleia

## JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_QUERY:true}

### Database and JPA Configs
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:postgres}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:mysecretpassword}
spring.datasource.hikari.maximum-pool-size=${DATABASE_POOL_SIZE:10}
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

# Spring actuator
management.endpoints.web.exposure.include= info,health

# Open API
openapi.dev-url=http://localhost:8080
openapi.prod-url=

# Async Configuration
async.context.core-pool-size=8
async.context.max-pool-size=16
async.context.queue-capacity=
async.context.thread-name-prefix=defaultPool

# Kafka Producer Configuration
app.kafka.producer.topics=${APP_KAFKA_PRODUCER_TOPIC:voto}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.producer.client-id=${KAFKA_CLIENT_ID:assembleia}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=1
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.group-id=group_id

# Consumer properties Configuration
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Flyway Configuration
spring.flyway.url=jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:postgres}
flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1
spring.flyway.user=${DATABASE_USERNAME:postgres}
spring.flyway.password=${DATABASE_PASSWORD:mysecretpassword}
flyway.locations=classpath:/db/migration